server:
  error:
    whitelabel:
      enabled: false
  undertow:
    accesslog:
      enabled: true
  compression:
    enabled: true
  port: 9016

spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/spring_cloud_study?characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false
    username: spring_cloud_study
    password: gstIJ845Ijh5P4e9
    driver-class-name: com.mysql.cj.jdbc.Driver
    tomcat:
      test-while-idle: true
      max-active: 30
      initial-size: 3
      min-idle: 3
      max-idle: 10
    hikari:
      #连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count)
      maximum-pool-size: 3
      # 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，
      #建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';）
      max-lifetime: 1500000
      #等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒
      connection-timeout: 30000
      # 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟
      idle-timeout: 300000
      #连接只读数据库时配置为true， 保证安全
      read-only: false

  redis:
    port: 6379
    host: 127.0.0.1
    password: wpx1997
    database: 2
    timeout: 20000ms
    lettuce:
      pool:
        # 最大活跃链接数 默认8
        max-active: 3
        # 最大空闲连接数 默认8
        max-idle: 3
        # 最小空闲连接数 默认0
        min-idle: 0
    messages:
      basename: messages

  jackson:
    default-property-inclusion: always
    serialization:
      write-dates-as-timestamps: true

  servlet:
    multipart:
      max-file-size: 8MB
      max-request-size: 8MB
      location: ${user.dir}/tmp
feign:
  circuitbreaker:
    enabled: true
  client:
    config:
      default:
        connectTimeout: 6000
        readTimeout: 10000

wpx:
  config:
    salt: ufg48UH849Yhngf4
application:
  server:
    token:
      api: main-base-web-api-token
      rest: main-base-web-rest-token
swagger:
  enable: true
  group: web
  application-name: ${spring.application.name}
  security-scheme:
    Authorization: Authorization
    route_api_token: route_api_token
    route_rest_token: route_rest_token
    User-Id: User-Id
  securityContext: Authorization,route_api_token,route_rest_token,User-Id